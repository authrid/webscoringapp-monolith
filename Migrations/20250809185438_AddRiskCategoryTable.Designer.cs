// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebScoringApp.Data;

#nullable disable

namespace WebScoringApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250809185438_AddRiskCategoryTable")]
    partial class AddRiskCategoryTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebScoringApp.Models.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AppNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BirthPlace")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PortalCode")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalScore")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("WebScoringApp.Models.ApplicationSelection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicationId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Bobot")
                        .HasColumnType("numeric");

                    b.Property<int>("GroupItemId")
                        .HasColumnType("integer");

                    b.Property<bool>("HighRisk")
                        .HasColumnType("boolean");

                    b.Property<int>("ItemOptionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("GroupItemId");

                    b.HasIndex("ItemOptionId");

                    b.ToTable("ApplicationSelections");
                });

            modelBuilder.Entity("WebScoringApp.Models.GroupInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BobotB")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GroupInformations");
                });

            modelBuilder.Entity("WebScoringApp.Models.GroupItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BobotD")
                        .HasColumnType("numeric");

                    b.Property<int>("GroupInformationId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GroupInformationId");

                    b.ToTable("GroupItems");
                });

            modelBuilder.Entity("WebScoringApp.Models.ItemOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BobotF")
                        .HasColumnType("integer");

                    b.Property<int>("GroupItemId")
                        .HasColumnType("integer");

                    b.Property<bool>("HighRisk")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GroupItemId");

                    b.ToTable("ItemOptions");
                });

            modelBuilder.Entity("WebScoringApp.Models.ApplicationSelection", b =>
                {
                    b.HasOne("WebScoringApp.Models.Application", "Application")
                        .WithMany("ApplicationSelections")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebScoringApp.Models.GroupItem", "GroupItem")
                        .WithMany()
                        .HasForeignKey("GroupItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebScoringApp.Models.ItemOption", "ItemOption")
                        .WithMany()
                        .HasForeignKey("ItemOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("GroupItem");

                    b.Navigation("ItemOption");
                });

            modelBuilder.Entity("WebScoringApp.Models.GroupItem", b =>
                {
                    b.HasOne("WebScoringApp.Models.GroupInformation", "GroupInformation")
                        .WithMany("GroupItems")
                        .HasForeignKey("GroupInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupInformation");
                });

            modelBuilder.Entity("WebScoringApp.Models.ItemOption", b =>
                {
                    b.HasOne("WebScoringApp.Models.GroupItem", "GroupItem")
                        .WithMany("ItemOptions")
                        .HasForeignKey("GroupItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupItem");
                });

            modelBuilder.Entity("WebScoringApp.Models.Application", b =>
                {
                    b.Navigation("ApplicationSelections");
                });

            modelBuilder.Entity("WebScoringApp.Models.GroupInformation", b =>
                {
                    b.Navigation("GroupItems");
                });

            modelBuilder.Entity("WebScoringApp.Models.GroupItem", b =>
                {
                    b.Navigation("ItemOptions");
                });
#pragma warning restore 612, 618
        }
    }
}
