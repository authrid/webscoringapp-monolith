@model Application

@{
    var groups = ViewData["Groups"] as List<WebScoringApp.Models.GroupInformation>;
}

<h1>Edit Application</h1>
<hr />

<form asp-action="Edit" method="post">
    <input type="hidden" asp-for="Id" />
    
    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10 col-sm-12"> <!-- Batas lebar form -->
            <!-- Nav Tabs -->
            <ul class="nav nav-tabs" id="formTabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" type="button" data-bs-toggle="tab" data-bs-target="#application" role="tab" disabled>
                        Data Application
                    </button>
                </li>
                @if (groups != null && groups.Any())
                {
                    int index = 0;
                    foreach (var group in groups)
                    {
                        if (group.GroupItems == null || !group.GroupItems.Any()) continue;
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" type="button" data-bs-toggle="tab" data-bs-target="#group-@index" role="tab" disabled>
                                @group.Name
                            </button>
                        </li>
                        index++;
                    }
                }
            </ul>

            <!-- Tab Content -->
            <div class="tab-content mt-3" id="formTabsContent">
                <!-- Application Tab -->
                <div class="tab-pane fade show active" id="application" role="tabpanel">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label asp-for="AppNo"></label>
                                <input asp-for="AppNo" class="form-control" disabled/>
                                <span asp-validation-for="AppNo" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label asp-for="Name"></label>
                                <input asp-for="Name" class="form-control" />
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label asp-for="BirthPlace"></label>
                                <input asp-for="BirthPlace" class="form-control" />
                                <span asp-validation-for="BirthPlace" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label asp-for="DateOfBirth"></label>
                                <input asp-for="DateOfBirth" type="date" class="form-control" />
                                <span asp-validation-for="DateOfBirth" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label asp-for="Gender"></label>
                                <select asp-for="Gender" class="form-select">
                                    <option value="">-- Pilih Gender --</option>
                                    <option value="Male">Laki-Laki</option>
                                    <option value="Female">Perempuan</option>
                                </select>
                                <span asp-validation-for="Gender" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label asp-for="PortalCode"></label>
                                <input asp-for="PortalCode" class="form-control" />
                                <span asp-validation-for="PortalCode" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="col-12">
                            <div class="form-group mb-3">
                                <label asp-for="Address"></label>
                                <textarea asp-for="Address" class="form-control"></textarea>
                                <span asp-validation-for="Address" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Group Tabs -->
                @if (groups != null && groups.Any())
                {
                    int index = 0;
                    foreach (var group in groups)
                    {
                        if (group.GroupItems == null || !group.GroupItems.Any()) continue;
                        <div class="tab-pane fade" id="group-@index" role="tabpanel">
                            @foreach (var groupItem in group.GroupItems)
                            {
                                var selectedOptionId = Model.ApplicationSelections
                                                ?.FirstOrDefault(s => s.GroupItemId == groupItem.Id)?.ItemOptionId ?? 0;

                                <div class="form-group mb-2">
                                    <label>@groupItem.Name</label>
                                    <select asp-for="@selectedOptionId" name="Selections[@groupItem.Id]" class="form-select">
                                        <option value="">-- Pilih --</option>
                                        @foreach (var option in groupItem.ItemOptions)
                                        {
                                            
                                            <option value="@option.Id" style="color:@(option.HighRisk ? "red" : "black")">
                                                @option.Name
                                            </option>
                                        }
                                    </select>
                                </div>
                            }
                        </div>
                        index++;
                    }
                }
            </div>

            <!-- Buttons -->
            <div class="mt-3 d-flex justify-content-between">
                <div>
                    <button type="button" class="btn btn-secondary me-2" id="prevBtn" style="display:none;">Previous</button>
                    <button type="button" class="btn btn-primary" id="nextBtn">Next</button>
                </div>
                <div>
                    <button type="submit" class="btn btn-success" id="submitBtn" disabled>Save</button>
                    <a asp-action="Index" class="btn btn-danger" id="cancelBtn" disabled>Cancel</a>
                </div>
            </div>
        </div>
    </div>
</form>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        const tabs = document.querySelectorAll('#formTabs button');
        const prevBtn = document.getElementById('prevBtn');
        const nextBtn = document.getElementById('nextBtn');
        const submitBtn = document.getElementById('submitBtn');
        const cancelBtn = document.getElementById('cancelBtn');
        let currentTab = 0;

        function showTab(index) {
            tabs[currentTab].classList.remove('active');
            document.querySelector(tabs[currentTab].dataset.bsTarget).classList.remove('show', 'active');

            tabs[index].classList.add('active');
            document.querySelector(tabs[index].dataset.bsTarget).classList.add('show', 'active');

            prevBtn.style.display = index === 0 ? 'none' : 'inline-block';
            nextBtn.style.display = index === tabs.length - 1 ? 'none' : 'inline-block';
            submitBtn.disabled = index !== tabs.length - 1;
            cancelBtn.disabled = index !== tabs.length - 1;

            currentTab = index;
        }

        nextBtn.addEventListener('click', () => {
            if (currentTab < tabs.length - 1) showTab(currentTab + 1);
        });

        prevBtn.addEventListener('click', () => {
            if (currentTab > 0) showTab(currentTab - 1);
        });

        // Inisialisasi tab pertama
        showTab(currentTab);
    </script>
}
